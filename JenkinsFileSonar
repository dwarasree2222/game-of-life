pipeline
{
agent any
#agent{label 'MAVEN_JAVA'}
stages
{
stage('git'){
steps{
git 'https://github.com/wakaleo/game-of-life.git'  
}
}
stage('shell')
    {
	steps{
	sh 'export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin:$PATH" && mvn package'
	}   

}
}
}    

=======================================

pipeline
	{
	agent any
	//triggers{
            //cron('* * * * *')
    //    }
	parameters {
	choice(name: 'MAVEN_GOAL', choices: ['clean', 'install', 'package'], description: 'Pick something')	
	}
	stages{
		stage('git'){
			steps{
					git url: 'https://github.com/dwarasree2222/game-of-life.git',
						branch: 'qa'
			}
		}
		//stage('shell'){
			//steps{
					//sh 'export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin:$PATH"'
					//sh "mvn ${params.MAVEN_GOAL}"
					  //sh 'export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin:$PATH" && mvn package'
			//}   

		//}
		
		stage('build && SonarQube analysis') {
            steps {
                withSonarQubeEnv('SonarCloud') {
                    // Optionally use a Maven environment you've configured already
                    withMaven(maven:'Maven 3.5') {
                        sh 'mvn clean package sonar:sonar'
                    }
                }
            }
        }

	}
}
     
